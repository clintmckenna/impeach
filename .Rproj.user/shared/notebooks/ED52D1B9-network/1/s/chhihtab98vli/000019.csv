"0","# for the next steps, we need to move title to the last column"
"0","edge1 <- edgelist %>%"
"0","  select(sender, receiver, condition, subject)"
"0","# rename participant roles for each condition, for both sender and receiver"
"0","edge1 <- edge1 %>%"
"0","  mutate("
"0","    sender = case_when("
"0","      condition == 'visible' ~ gsub('Participant ', 'visible_', .$sender),"
"0","      condition == 'notVisible' ~ gsub('Participant ', 'notVisible_', .$sender)),"
"0","    receiver = case_when("
"0","      condition == 'visible' ~ gsub('Participant ', 'visible_', .$receiver),"
"0","      condition == 'notVisible' ~ gsub('Participant ', 'notVisible_', .$receiver)))"
"0","# retrieve vertex scores from initial dataset"
"0","vertexScores <- dat %>%"
"0","  select(sender = role, condition, r1_score, r2_score, r3_score, r4_score)"
"0","# rename participant roles for each condition"
"0","vertexScores <- vertexScores %>%"
"0","  mutate(sender = case_when("
"0","    condition == 'visible' ~ gsub('Participant ', 'visible_', .$sender),"
"0","    condition == 'notVisible' ~ gsub('Participant ', 'notVisible_', .$sender)))"
"0","# sort edgelist by sender"
"0","edge1 <- edge1[order(edge1$sender),]"
"0","vertexScores <- vertexScores[order(vertexScores$sender),]"
"0","# only edgelist vals"
"0","edge2 <- edge1 %>% select(sender, receiver)"
"0","# create network object. non-directed"
"0","net <- graph_from_data_frame("
"0","  edge2,"
"0","  directed = FALSE,"
"0","  vertices = vertexScores"
"0",")"
